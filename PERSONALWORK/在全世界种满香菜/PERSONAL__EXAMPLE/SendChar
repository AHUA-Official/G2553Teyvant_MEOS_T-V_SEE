#include <msp430.h> 


/**
 * main.c
 */
//@brief：初始化串口，包括设置波特率，数据位，校验位等
void InitUART(void)
{
    //  复位USCI_Ax
        UCA0CTL1 |=UCSWRST;

    //  选择USCI_Ax为UART模式
        UCA0CTL0 &= ~UCSYNC;

    //  配置UART时钟源为SMCLK
        UCA0CTL1 |=UCSSEL1;

    //  配置波特率为9600@1MHZ
        UCA0BR0 = 0x68;
        UCA0BR1 = 0x00;
        UCA0MCTL = 1 << 1;

    //  使能端口复用
        P1SEL |= BIT1+ BIT2;
        P1SEL2 |= BIT1+ BIT2;
    //  清除复位位，使能UART
        UCA0CTL1 &= ~UCSWRST;
}


//初始化系统时钟函数
void InitSystemClock(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer
    //  配置DCO为1MHZ
        DCOCTL = CALDCO_1MHZ;
        BCSCTL1 = CALBC1_1MHZ;
    //  配置SMCLK的时钟源为DCO
        BCSCTL2 &= ~SELS;
    //  SMCLK的分频系数为1
        BCSCTL2 &= ~(DIVS0 | DIVS1);

}

//通过串口发送字符串
void UARTSendString(uint8_t *pbuff,uint8_t num)
{
    uint8_t cnt = 0;
    for(cnt = 0;cnt < num;cnt ++)
    {
        while(UCA0STAT & UCBUSY);
        UCA0TXBUF = *(pbuff + cnt);
    }
}

//通过串口发送数字
void PrintNumber(uint16_t num)
{
    uint8_t buff[6] = {0,0,0,0,0,'\n'};
    uint8_t cnt = 0;
    for(cnt=0;cnt<5;cnt++)
    {
//        加'0'是让ASCII码值转换成数字，而不是字符串
        buff[4-cnt] = (uint8_t)(num % 10 + '0');
        num /= 10;
    }
    UARTSendString(buff,6);
}
int main(void)

{
	WDTCTL = WDTPW | WDTHOLD;	// stop watchdog timer

     InitSystemClock();
	 InitUART();
	while(1)
	{
	   UARTSendString("ASDFGh",6);
	    __delay_cycles(500000);
	}
	return 0;
}
